[Rainmeter]
; 建议值，太大导致歌词，播放状态等更新太慢
Update=100

[Metadata]
Author= LXF
Name=MusicPlayer2 的示例文件
Information=BUG反馈 QQ: 2985970587 建议学习顺序: 快速开始.ini(快速上手) -> 示例.ini(一些高级的操作) -> 示例-优化.ini(优化了CPU占用) -> 播放器，歌词分离(优化CPU占用的基础上将播放器，歌词分离开)
Version=3.2.0
License=开源地址https://github.com/lxf2013/MusicPlayer2

[Metadata]
Author= LXF
Name=MusicPlayer2 的示例文件
Information=基于MusicPlayer开发的Rainmeter插件，在MusicPlayer基础上增加了获取歌词和封面，歌词控制的功能，会从网络上下载歌词和专辑图片，缓存在本地，下次直接从本地读取，可设置缓存大小，歌曲相似度（避免搜索错误） 日后增加从多个源筛选的功能，开源地址https://github.com/lxf2013/MusicPlayer2，遇到BUG欢迎反馈 QQ: 2985970587
Version=3.2.0

======================歌曲及其它信息显示的背景，无需过多关注====================
; 播放显示的背景
[PlayerBackground]
Meter=Shape
X=0
Y=0
Shape=Rectangle 0,0,400,60,10 | Fill Color 240,240,240,100 | StrokeWidth 1 | Stroke Color 255,255,255,0
UpdateDivider=-1

; 歌词显示的背景
[LyricBackground]
Meter=Shape
X=0
Y=61
Shape=Rectangle 0,0,400,120,10 | Fill Color 240,240,240,50 | StrokeWidth 1 | Stroke Color 255,255,255,0
UpdateDivider=-1




==========================Manager，管理整个插件的配置，播放器信息的获取，歌词，专辑的获取=====================
[PlayerCenter]
Measure=Plugin
Plugin=MusicPlayer2.dll

Type=Manager

; QQ音乐为 QQMusic
; 酷我音乐为 KwMusic
; 酷狗音乐为 KgMusic
; 百度音乐为 BaiduMusic
; 网易云音乐为 CloudMusic
PlayerName=QQMusic

;歌词距开始的偏移，当歌词速度不匹配时使用（可选的）
; LyricOffset=-1500

;歌词，专辑的下载路径（可选的）
; DownloadPath=download

;标题相似度，0-2之间，可用于解决歌词搜索错误的问题（可选的）
; Similarity=1.6

;缓存最大个数（可选的）
; Capacity=100

;默认的专辑图和歌词，当没有专辑和歌词时显示
DefaultCover=default.jpg
DefaultLyric=default.lrc


=======================歌曲信息获取与显示============================
; 获取歌曲播放状态
[Status]
Measure=Plugin
Plugin=MusicPlayer2.dll

; Status 获得播放器运行状态（0表示未播放，1表示播放中）
Type=Status

; 指定管理者(必须的)
Manager=PlayerCenter

; 播放时执行动作
PlayAction=[!HideMeter Stop][!ShowMeter Play][!UpdateMeter Play]

; 停止时执行动作
StopAction=[!HideMeter Play][!ShowMeter Stop][!UpdateMeter Stop]


; 获得歌手名和歌曲名
[Track]
Measure=Plugin
Plugin=MusicPlayer2.dll

; Track 获得歌手名和歌曲名（可选的）
; Title 获得歌曲名（可选的）
; Artist 获得歌手名（可选的）
Type=Track

;指定管理者(必须的)
Manager=PlayerCenter

; Track改变时动作
ChangeAction=[!HideMeter Stop][!UpdateMeter Play]



; 播放时显示
[Play]
Meter=String
MeasureName=Track
StringAlign=Center
FontSize=15
FontColor=2.238.251
StringEffect=SHADOW
StringStyle=BOLD
X=230
Y=15
W=280
ClipString=1
Antialias=1

;关闭自动更新
UpdateDivider=-1

; 插件支持的命令，后面也会用到一些相关命令
; Open 打开播放器
; Close 关闭播放器
; PlayPause 播放或暂停
; Stop 停止
; Previous 前一首
; Next 后一首
LeftMouseUpAction=[!CommandMeasure Track PlayPause]


; 停止后显示
[Stop]
Meter=String
MeasureName=Track
StringAlign=Center
FontSize=15
FontColor=0.0.0
StringEffect=SHADOW
StringStyle=BOLD
X=230
Y=15
W=280
ClipString=1
Antialias=1

;关闭自动更新
UpdateDivider=-1
LeftMouseUpAction=[!CommandMeasure Track PlayPause]


===============================歌词获取与显示================================
; 歌词的一些共有的显示设置
[LrcStyle]
StringAlign=Center
StringEffect=SHADOW
StringStyle=BOLD
W=400
ClipString=1
Antialias=1

;关闭自动更新
UpdateDivider=-1


; 获取前一句歌词，歌词会自动联网下载，缓存在本地，下一次直接本地读取，下载路径由Manager中的DownloadPath指定
[Lyric_1]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter

; lrc_6 当前播放歌词的第前6句歌词（可选的）
; lrc_5 当前播放歌词的第前5句歌词（可选的）
; lrc_4 当前播放歌词的第前4句歌词（可选的）
; lrc_3 当前播放歌词的第前3句歌词（可选的）
; lrc_2 当前播放歌词的第前2句歌词（可选的）
; lrc_1 当前播放歌词的第前1句歌词（可选的）
; lrc_0 当前播放的歌词（可选的）
; lrc1 当前播放歌词的第后1句歌词（可选的）
; lrc2 当前播放歌词的第后3句歌词（可选的）
; lrc3 当前播放歌词的第后3句歌词（可选的）
; lrc4 当前播放歌词的第后4句歌词（可选的）
; lrc5 当前播放歌词的第后5句歌词（可选的）
; lrc6 当前播放歌词的第后6句歌词（可选的）
; lrc7 当前播放歌词的第后7句歌词（可选的）
; lrc8 当前播放歌词的第后8句歌词（可选的）
; lrc9 当前播放歌词的第后9句歌词（可选的）

; tlrc_6 当前播放歌词的第前6句歌词的翻译（可选的）
; tlrc_5 当前播放歌词的第前5句歌词的翻译（可选的）
; tlrc_4 当前播放歌词的第前4句歌词的翻译（可选的）
; tlrc_3 当前播放歌词的第前3句歌词的翻译（可选的）
; tlrc_2 当前播放歌词的第前2句歌词的翻译（可选的）
; tlrc_1 当前播放歌词的第前1句歌词的翻译（可选的）
; tlrc_0 当前播放的歌词的翻译（可选的）
; tlrc1 当前播放歌词的第后1句歌词的翻译（可选的）
; tlrc2 当前播放歌词的第后3句歌词的翻译（可选的）
; tlrc3 当前播放歌词的第后3句歌词的翻译（可选的）
; tlrc4 当前播放歌词的第后4句歌词的翻译（可选的）
; tlrc5 当前播放歌词的第后5句歌词的翻译（可选的）
; tlrc6 当前播放歌词的第后6句歌词的翻译（可选的）
; tlrc7 当前播放歌词的第后7句歌词的翻译（可选的）
; tlrc8 当前播放歌词的第后8句歌词的翻译（可选的）
; tlrc9 当前播放歌词的第后9句歌词的翻译（可选的）
Type=lrc_1

; lrc_1改变时执行动作
ChangeAction=[!UpdateMeter ShowLyric_1]

; 显示前一句歌词
[ShowLyric_1]
Meter=String
MeasureName=Lyric_1
MeterStyle=LrcStyle
FontSize=10
FontColor=0.0.0
X=200
Y=71


; 获取当前歌词
[Lyric0]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter
Type=lrc0

; lrc0改变时执行动作
ChangeAction=[!UpdateMeter ShowLyric0]

; 显示当前歌词
[ShowLyric0]
Meter=String
MeasureName=Lyric0
MeterStyle=LrcStyle
FontSize=15
FontColor=2.238.251
X=200
Y=94


; 获取当前歌词的翻译
[TLyric0]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter
Type=tlrc0

; tlrc0改变时执行动作
ChangeAction=[!UpdateMeter ShowTLyric0]

; 显示当前歌词的翻译
[ShowTLyric0]
Meter=String
MeasureName=TLyric0
MeterStyle=LrcStyle
FontSize=10
FontColor=2.238.251
X=200
Y=112



; 获取后一句歌词
[Lyric1]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter
Type=lrc1

; lrc1改变时执行动作
ChangeAction=[!UpdateMeter ShowLyric1]

; 显示后一句歌词
[ShowLyric1]
Meter=String
MeasureName=Lyric1
MeterStyle=LrcStyle
FontSize=12
FontColor=0.0.0
X=200
Y=126


; 获取后面第二句歌词
[Lyric2]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter
Type=lrc2

; lrc2改变时执行动作
ChangeAction=[!UpdateMeter ShowLyric2]

; 显示后面第二句歌词
[ShowLyric2]
Meter=String
MeasureName=Lyric2
MeterStyle=LrcStyle
FontSize=10
FontColor=0.0.0
X=200
Y=151




==================================专辑图片获取与显示===========================
; 专辑图片获取，会返回路径，图片会自动联网下载，缓存在本地，下一次直接本地读取，下载路径由Manager中的DownloadPath指定
[Cover]
Measure=Plugin
Plugin=MusicPlayer2.dll
Manager=PlayerCenter
Type=Cover

; Cover改变时执行动作
ChangeAction=[!UpdateMeter ShowCover]

; 专辑按圆形显示
[ShowRound]
Meter=Image
ImageName=image.png
W=60
AntiAlias=1
UpdateDivider=-1

; 专辑显示
[ShowCover]
Meter=Image
ImageName=[Cover]
Container=ShowRound
W=60
DynamicVariables=1

; 左键打开播放器，支持的其它命令前面有详细说过
; LeftMouseUpAction=["D:\LXF-2013\install\QQMusic\QQMusic.exe"]
LeftMouseUpAction=[!CommandMeasure Track open]
UpdateDivider=-1




======================显示歌曲切换按钮===========================
; 上一首按钮
[Previous]
Meter=Image
ImageName=Previous.png
X=70
Y=20
LeftMouseDownAction= [!CommandMeasure Track Previous]
ImageAlpha=220
UpdateDivider=-1

; 下一首按钮
[Next]
Meter=Image
ImageName=Next.png
X=370
Y=20
LeftMouseDownAction= [!CommandMeasure Track Next]
ImageAlpha=220
UpdateDivider=-1

